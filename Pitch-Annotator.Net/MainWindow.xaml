<Window x:Class="PitchAnnotator.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:PitchAnnotator"
	xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
	Title="Pitch Annotator.Net" 
	Height="768" 
	Width="1366"
	Loaded="MainWindow_Loaded"
	WindowState="Maximized"
	SizeChanged="Window_SizeChanged"
	MinHeight="600"
	MinWidth="800"
	FocusManager.FocusedElement="{Binding ElementName=scroller}"
	>
	<Window.Resources>
		
		<!-- UI commands. -->
		<RoutedUICommand x:Key="Commands.ZoomOut" />
		<RoutedUICommand x:Key="Commands.ZoomIn" />
		<RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
		<RoutedUICommand x:Key="Commands.Fill" />
		<RoutedUICommand x:Key="Commands.OneHundredPercent" />

		<!-- 
		This converts from a scale value to a percentage value.
		It is used to convert the value of 'ContentScale' to the percentage zoom level that is displayed in the UI.
		-->
		<local:ScaleToPercentConverter 
			x:Key="scaleToPercentConverter" 
			/>
		
	</Window.Resources>
	
	<Window.InputBindings>
		
		<!--
		Bind keys to commands.
		-->
		<KeyBinding
			Key="Minus"
			Command="{StaticResource Commands.ZoomOut}"
			/>
		<KeyBinding
			Key="Plus"
			Command="{StaticResource Commands.ZoomIn}"
			/>
		<KeyBinding
			Key="Backspace"
			Command="{StaticResource Commands.JumpBackToPrevZoom}"
			/>
		<KeyBinding
			Key="F"
			Command="{StaticResource Commands.Fill}"
			/>
		<KeyBinding
			Key="P"
			Command="{StaticResource Commands.OneHundredPercent}"
			/>
	</Window.InputBindings>
	
	<Window.CommandBindings>

		<!--
		Bind commands to event handlers.
		-->
		<CommandBinding 
			Command="{StaticResource Commands.ZoomOut}" 
			Executed="ZoomOut_Executed" 
			/>
		<CommandBinding 
			Command="{StaticResource Commands.ZoomIn}" 
			Executed="ZoomIn_Executed" 
			/>
		<CommandBinding 
			Command="{StaticResource Commands.JumpBackToPrevZoom}" 
			CanExecute="JumpBackToPrevZoom_CanExecuted"
			Executed="JumpBackToPrevZoom_Executed" 
			/>
		<CommandBinding 
			Command="{StaticResource Commands.Fill}" 
			Executed="Fill_Executed" 
			/>
		<CommandBinding 
			Command="{StaticResource Commands.OneHundredPercent}" 
			Executed="OneHundredPercent_Executed" 
			/>

	</Window.CommandBindings>

	<Grid>
		
		<!-- 
		Grid placed below the zoom and pan control that contains the zoom slider, zoom label and
		some button.
		-->
		<Grid
			Name="statBar" 
			Height="35" 
			Margin="0,0,0,0" 
			VerticalAlignment="Bottom" 
			Background="WhiteSmoke"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<!-- empty space -->
				<ColumnDefinition Width="40" />
				<!-- the fill button -->
				<ColumnDefinition Width="5" />
				<!-- spacer -->
				<ColumnDefinition Width="40" />
				<!-- the 100% button -->
				<ColumnDefinition Width="5" />
				<!-- spacer -->
				<ColumnDefinition Width="25" />
				<!-- the zoom percentage label -->
				<ColumnDefinition Width="15" />
				<!-- the % symbol -->
				<ColumnDefinition Width="5" />
				<!-- spacer -->
				<ColumnDefinition Width="20" />
				<!-- the zoom out button -->
				<ColumnDefinition Width="5" />
				<!-- spacer -->
				<ColumnDefinition Width="120" />
				<!-- the zoom slider -->
				<ColumnDefinition Width="5" />
				<!-- spacer -->
				<ColumnDefinition Width="20" />
				<!-- the zoom in button -->
				<ColumnDefinition Width="10" />
				<!-- spacer -->
				<ColumnDefinition Width="Auto" />
				<!-- resize grip -->
				<!-- spacer -->
			</Grid.ColumnDefinitions>

			<!-- 
			The fill button.  Causes the content to be scaled so that it fits in the viewport.
			-->
			<Button
				Grid.Column="1"
				Command="{StaticResource Commands.Fill}"
				>
				Fill
			</Button>
			<!-- 
			The 100% button.  Causes the content to be scaled to 100 percent.
			-->
			<Button
				Grid.Column="3"
				Command="{StaticResource Commands.OneHundredPercent}"
				>
				100%
			</Button>

			<!--
			This is the label that shows what the current zoom level
			is while zooming in and out.
			-->
			<TextBlock
				Grid.Column="5"
				VerticalAlignment="Center"
				HorizontalAlignment="Right"
				Text="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource scaleToPercentConverter}}"
				/>

			<TextBlock
				Grid.Column="6"
				VerticalAlignment="Center"
				Text="%"
				/>

			<!-- Button to zoom out. -->
			<Button
				Grid.Column="8"
				Command="{StaticResource Commands.ZoomOut}"
				>
				-
			</Button>

			<!-- Slider to change the current zoom level. -->
			<Slider
				Grid.Column="10"
				Minimum="10" 
				LargeChange="20" 
				TickFrequency="10" 
				Maximum="200" 
				SmallChange="10" 
				TickPlacement="TopLeft"
				Value="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource scaleToPercentConverter}}"
				/>

			<!--
			Button to zoom in.
			-->
			<Button
				Grid.Column="12"
				Command="{StaticResource Commands.ZoomIn}"
				>
				+
			</Button>

			<!-- Stick a resize grip in the bottom right corner of the window. -->
			<ResizeGrip
				Grid.Column="14"
				/>

		</Grid>

		<Grid 
			Name="mainGrid" 
			Margin="0,0,0,35"
			>
			<GroupBox 
				Name="mainGroupBox" 
				Margin="0,0,300,0"
				Header="Image Pane"
				>
				<!--
		Wrap the ZoomAndPanControl in a ScrollViewer.
		When the scaled content that is displayed in ZoomAndPanControl is larger than the viewport onto the content
		ScrollViewer's scrollbars can be used to manipulate the offset of the viewport.    
		-->
				<ScrollViewer
			x:Name="scroller"
			CanContentScroll="True"
			VerticalScrollBarVisibility="Visible"
			HorizontalScrollBarVisibility="Visible"
			>

					<!--
			This is the control that handles zooming and panning.
			-->
					<ZoomAndPan:ZoomAndPanControl
				x:Name="zoomAndPanControl"
				Background="LightGray"
				MouseDown="zoomAndPanControl_MouseDown"
				MouseUp="zoomAndPanControl_MouseUp"
				MouseMove="zoomAndPanControl_MouseMove"
				MouseWheel="zoomAndPanControl_MouseWheel"
				MouseDoubleClick="zoomAndPanControl_MouseDoubleClick"
				>

						<!-- 
				This is the content that is displayed.
				-->
						<Grid
					x:Name="theGrid"
					Width="2000"
					Height="2000"
					>
							<!--
					This Canvas is the main part of the content that is displayed.
					-->
							<Canvas
						x:Name="canvas"
						Background="White"
						>
								<!--
						Add some rectangles that the user can drag about.
						-->
								<Rectangle
							Canvas.Left="50"
							Canvas.Top="50"
							Width="80"
							Height="150"
							Fill="Blue"
							Cursor="Hand"
							MouseDown="Rectangle_MouseDown"
							MouseUp="Rectangle_MouseUp"
							MouseMove="Rectangle_MouseMove"
							/>
								<Rectangle
							Canvas.Left="550"
							Canvas.Top="350"
							Width="80"
							Height="150"
							Fill="Green"
							Cursor="Hand"
							MouseDown="Rectangle_MouseDown"
							MouseUp="Rectangle_MouseUp"
							MouseMove="Rectangle_MouseMove"
							/>
								<Rectangle
							Canvas.Left="850"
							Canvas.Top="850"
							Width="30"
							Height="20"
							Fill="Purple"
							Cursor="Hand"
							MouseDown="Rectangle_MouseDown"
							MouseUp="Rectangle_MouseUp"
							MouseMove="Rectangle_MouseMove"
							/>
								<Rectangle
							Canvas.Left="1850"
							Canvas.Top="1850"
							Width="80"
							Height="150"
							Fill="Red"
							Cursor="Hand"
							MouseDown="Rectangle_MouseDown"
							MouseUp="Rectangle_MouseUp"
							MouseMove="Rectangle_MouseMove"
							/>
							</Canvas>

							<!--
					This Canvas and Border are used as a very simple way to render a drag rectangle that the user
					uses to specify an area to zoom in on.
					-->
							<Canvas
						x:Name="dragZoomCanvas"
						Visibility="Collapsed"
						>
								<Border 
							x:Name="dragZoomBorder"
							BorderBrush="Black"
							BorderThickness="1"
							Background="Silver"
							CornerRadius="1"
							Opacity="0"
							/>
							</Canvas>
						</Grid>
					</ZoomAndPan:ZoomAndPanControl>
				</ScrollViewer>
			</GroupBox>
		</Grid>
	</Grid>
</Window>
